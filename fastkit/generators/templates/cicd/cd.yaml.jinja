name: CD

# SETUP REQUIRED:
# Before using this workflow, configure the following repository secrets:
{% if include_docker %}# - DOCKER_USERNAME: Your Docker Hub username
# - DOCKER_PASSWORD: Your Docker Hub password or access token
{% endif %}# - Add deployment-specific secrets (AWS keys, server credentials, etc.)
# Go to: Repository Settings > Secrets and variables > Actions

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: {% raw %}github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'){% endraw %}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Install uv
      uses: astral-sh/setup-uv@v2

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Run tests
      run: |
        uv run pytest
{% if include_docker %}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # REQUIRED: Configure DOCKER_USERNAME and DOCKER_PASSWORD secrets in repository settings
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        # TODO: Set your Docker Hub username and password secrets
        # username: ${{ secrets.DOCKER_USERNAME }}
        # password: ${{ secrets.DOCKER_PASSWORD }}
        username:
        password:

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        # REQUIRED: Set your Docker Hub username secret (DOCKER_USERNAME)
        # images: ${{ secrets.DOCKER_USERNAME }}/{{ project_name }}
        images:
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={% raw %}{{version}}{% endraw %}
          type=semver,pattern={% raw %}{{major}}.{{minor}}{% endraw %}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: {% raw %}${{ steps.meta.outputs.tags }}{% endraw %}
        labels: {% raw %}${{ steps.meta.outputs.labels }}{% endraw %}
        cache-from: type=gha
        cache-to: type=gha,mode=max
{% endif %}

    # DEPLOYMENT CONFIGURATION REQUIRED:
    # Replace the echo commands below with your actual deployment steps
    # Examples:
    # - Deploy to AWS ECS (requires AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY secrets)
    # - Deploy to Kubernetes (requires KUBECONFIG secret)
    # - Deploy to Heroku (requires HEROKU_API_KEY secret)
    # - Deploy to DigitalOcean App Platform (requires DIGITALOCEAN_ACCESS_TOKEN secret)
    # - Deploy to your own servers (requires SSH_PRIVATE_KEY, SERVER_HOST secrets)

    - name: Deploy to staging
      if: {% raw %}github.ref == 'refs/heads/main'{% endraw %}
      run: |
        echo "Deploy to staging environment"
        # Add your staging deployment commands here

    - name: Deploy to production
      if: {% raw %}startsWith(github.ref, 'refs/tags/v'){% endraw %}
      run: |
        echo "Deploy to production environment"
        # Add your production deployment commands here