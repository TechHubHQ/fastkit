"""Database session management."""

{% if db_choice in ["postgresql", "mysql", "sqlite", "mssql"] -%}
from .base import SessionLocal, engine, Base


def create_tables():
    """Create all database tables."""
    Base.metadata.create_all(bind=engine)


def drop_tables():
    """Drop all database tables."""
    Base.metadata.drop_all(bind=engine)

{% elif db_choice == "mongodb" -%}
from typing import AsyncIterator
from app.core.config import settings
from motor.motor_asyncio import AsyncIOMotorClient

_mongo_client: AsyncIOMotorClient | None = None
_mongo_db = None


async def connect_to_mongo() -> None:
    global _mongo_client, _mongo_db
    if _mongo_client is None:
        _mongo_client = AsyncIOMotorClient(settings.DATABASE_URL)
        db_name = settings.DATABASE_URL.split('/')[-1] or "{{ project_name.replace('-', '_') }}"
        _mongo_db = _mongo_client[db_name]


async def close_mongo_connection() -> None:
    global _mongo_client
    if _mongo_client is not None:
        _mongo_client.close()
        _mongo_client = None


async def get_mongo_db() -> AsyncIterator:
    """FastAPI DI dependency yielding the Mongo database handle."""
    # Ensure connected
    if _mongo_client is None:
        await connect_to_mongo()
    yield _mongo_db
{% endif -%}