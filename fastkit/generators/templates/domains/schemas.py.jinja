"""{{ domain_name.title() }} domain schemas."""

from pydantic import BaseModel
from datetime import datetime
from typing import Optional


class {{ domain_name.title() }}Base(BaseModel):
    """Base {{ domain_name.lower() }} schema."""

    name: str
    description: Optional[str] = None
    is_active: bool = True


class {{ domain_name.title() }}Create({{ domain_name.title() }}Base):
    """Schema for creating a {{ domain_name.lower() }}."""
    pass


class {{ domain_name.title() }}Update(BaseModel):
    """Schema for updating a {{ domain_name.lower() }}."""

    name: Optional[str] = None
    description: Optional[str] = None
    is_active: Optional[bool] = None


class {{ domain_name.title() }}Response({{ domain_name.title() }}Base):
    """Schema for {{ domain_name.lower() }} response."""

    id: int
    created_at: datetime
    updated_at: Optional[datetime] = None

    class Config:
        from_attributes = True