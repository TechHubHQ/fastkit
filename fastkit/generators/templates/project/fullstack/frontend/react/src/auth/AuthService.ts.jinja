import { api } from '../services/api'
{% if is_typescript %}import { User, LoginResponse } from '../types'{% endif %}

export class AuthService {
  private static readonly TOKEN_KEY = 'auth_token'

  static async login(email{% if is_typescript %}: string{% endif %}, password{% if is_typescript %}: string{% endif %}){% if is_typescript %}: Promise<LoginResponse>{% endif %} {
    const response = await api.post{% if is_typescript %}<LoginResponse>{% endif %}('/auth/login', {
      email,
      password
    })
    
    if (response.data.access_token) {
      localStorage.setItem(this.TOKEN_KEY, response.data.access_token)
    }
    
    return response.data
  }

  static async getCurrentUser(){% if is_typescript %}: Promise<User | null>{% endif %} {
    const token = this.getToken()
    if (!token) return null

    try {
      const response = await api.get{% if is_typescript %}<User>{% endif %}('/auth/me')
      return response.data
    } catch (error) {
      this.logout()
      return null
    }
  }

  static logout(){% if is_typescript %}: void{% endif %} {
    localStorage.removeItem(this.TOKEN_KEY)
  }

  static getToken(){% if is_typescript %}: string | null{% endif %} {
    return localStorage.getItem(this.TOKEN_KEY)
  }

  static isAuthenticated(){% if is_typescript %}: boolean{% endif %} {
    return !!this.getToken()
  }
}