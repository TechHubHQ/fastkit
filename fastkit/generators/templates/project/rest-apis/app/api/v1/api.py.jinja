"""Main API router with auto-discovery of domain routes."""

import importlib
import logging
from pathlib import Path
from fastapi import APIRouter

logger = logging.getLogger(__name__)

api_router = APIRouter()


def discover_and_include_domain_routes():
    """Auto-discover and include domain routes."""
    domains_path = Path(__file__).parent.parent.parent / "domains"

    if not domains_path.exists():
        logger.info("No domains directory found")
        return

    for domain_dir in domains_path.iterdir():
        if (domain_dir.is_dir() and
            not domain_dir.name.startswith("_") and
                not domain_dir.name.startswith(".")):

            try:
                # Try to import the routes module from the domain
                routes_module = importlib.import_module(
                    f"app.domains.{domain_dir.name}.routes")

                if hasattr(routes_module, "router"):
                    api_router.include_router(routes_module.router)
                    logger.info(
                        f"Included routes for domain: {domain_dir.name}")
                else:
                    logger.warning(
                        f"Domain {domain_dir.name} has no 'router' attribute in routes.py")

            except ImportError as e:
                logger.warning(
                    f"Could not import routes for domain {domain_dir.name}: {e}")
            except Exception as e:
                logger.error(
                    f"Error including routes for domain {domain_dir.name}: {e}")


# Auto-discover and include domain routes
discover_and_include_domain_routes()


# Add any global routes here
@api_router.get("/status")
def api_status():
    """API status endpoint."""
    return {"status": "ok", "message": "API is running"}
